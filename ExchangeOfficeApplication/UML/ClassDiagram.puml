@startuml
abstract class Account
class Unauthenticated\nUser
class Cashier
class Bank\nAdministrator
class Exchange
class ViewingHistory
class Login
class CurrenceExchangeUpdate
class GetLog
class Bank
class EntryPoint
class Application
class LoginWindow
class CashierWindow
class AdminWindow
class DialogWindow
interface ICommand

enum Currency 
{
    EUR
    USD
    RUB
    BYR
}

interface ICommand
{
    Execute()
}

class ViewingHistory
{
    int customerID
    
    Execute()
}

class Exchange
{
    Bank bank
    int customerID
    Currency TargetCurrency
    Currency ContributedCurrency
    double amount
    
    Exchange(Bank bank, int customerID,\nCurrency TargetCurrency,\nCurrency ContributedCurrency, double amount)
    Execute()
}

class GetLog
{
    Bank bank
    
    ReadLog(Bank bank)
    Execute()
}

class CurrenceExchangeUpdate
{
    Bank bank
    Currency TargetCurrency
    Currency ContributedCurrency
    double newPurchaseRate
    double newSaleRate
    
    CurrenceExchangeUpdate(Bank bank, Currency TargetCurrency,\nCurrency ContributedCurrency, double newPurchaseRate,\ndouble newSaleRate)
    Execute()
}

class Login
{
    Bank bank
    string login
    string password
    
    Login(Bank bank, string login, string password)
    Execute()
}

abstract class Account
{
    ICommand Ð¡ommand
}

class Application
{
    LoginWindow loginWindow
    CashierWindow cashierWindow
    AdminWindow adminWindow
    DialogWindow dialogWindow
    Account account
    Run()
}

class Unauthenticated\nUser
{
    UnauthenticatedUser(ICommand)
}

class Cashier
{
    Cashier(ICommand)
}

class Bank\nAdministrator
{
    BankAdministrator(ICommand  )
}

class LoginWindow
{
    -Label LoginLable
    -Label PasswordLable
    -Entry LoginEntry
    -Entry PasswordEntry
    -Window LoginWindow
    -Builder GuiBuilder
    -bool adminFlag
    
    +Login()
    #OkButtonClicked(object sender, EventArgs a)
    #ExitButtonClicked(object sender, EventArgs a)
    #AdministratorSwitchActivate(object sender, ButtonReleaseEventArgs a)
    #ExitButton(object sender, EventArgs a)
}

class CashierWindow
{
            -Label LoginLable
            -Label PasswordLable
            -Entry LoginEntry
            -Entry PasswordEntry
            -Window Cashier
            -Builder GuiBuilder
            
            +CashierWindow()
            #ExitButton(object sender, EventArgs a)
}   

Account ..> ICommand

Account <|-- Unauthenticated\nUser
Account <|-- Cashier
Account <|-- Bank\nAdministrator

ICommand <|.. Login
ICommand <|.. CurrenceExchangeUpdate
ICommand <|.. GetLog
ICommand <|.. Exchange
ICommand <|.. ViewingHistory

Login o---> Bank
CurrenceExchangeUpdate o---> Bank
GetLog o---> Bank
Exchange o---> Bank
ViewingHistory o---> Bank

EntryPoint --> Application
Application *--> LoginWindow 
Application *--> AdminWindow
Application *--> DialogWindow
Application *--> CashierWindow

CashierWindow ---> Cashier 
LoginWindow ---> Unauthenticated\nUser
AdminWindow ---> Bank\nAdministrator

@enduml

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}